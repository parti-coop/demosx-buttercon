<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <global-method-security pre-post-annotations="enabled"/>
    <http auto-config="true" use-expressions="true" entry-point-ref="authenticationEntryPoint">

        <intercept-url pattern="/admin/ajax/issue/proposals" access="hasRole('ROLE_MANAGER')"/>
        <intercept-url pattern="/admin/ajax/issue/proposals/**/managerComment" access="hasRole('ROLE_MANAGER')"/>
        <intercept-url pattern="/admin/ajax/opinions" access="hasRole('ROLE_MANAGER')"/>
        <intercept-url pattern="/admin/index.do" access="hasRole('ROLE_MANAGER')"/>
        <intercept-url pattern="/admin/issue/proposal.do" access="hasRole('ROLE_MANAGER')"/>
        <intercept-url pattern="/admin/issue/proposal-detail.do" access="hasRole('ROLE_MANAGER')"/>

        <intercept-url pattern="/admin/**" access="hasRole('ROLE_MANAGER')"/>
        <intercept-url pattern="/debate-history-edit.do" access="hasRole('ROLE_ADMIN')"/>

        <intercept-url pattern="/mypage/**" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/ajax/mypage/**" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/ajax/butter/**" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/ajax/salon/**" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/new-proposal.do" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/butter-new.do" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/butter-edit.do" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/salon-new.do" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/salon-edit.do" access="hasRole('ROLE_USER')"/>

        <form-login login-page="/email-login.do"
                    username-parameter="id"
                    password-parameter="pw"
                    login-processing-url="/loginProcess.do"
                    authentication-success-handler-ref="authenticationSuccessHandler"
                    authentication-failure-handler-ref="authenticationFailureHandler"
        />

        <access-denied-handler ref="accessDeniedHandler"/>

        <logout logout-url="/logout.do" logout-success-url="/" delete-cookies="JSESSIONID" invalidate-session="true"/>
        <session-management>
            <concurrency-control max-sessions="10" error-if-maximum-exceeded="false"/>
        </session-management>

        <csrf request-matcher-ref="csrfSecurityRequestMatcher"/>

        <headers>
            <frame-options policy="SAMEORIGIN"/>
        </headers>

        <custom-filter ref="socialAuthenticationFilter" before="FORM_LOGIN_FILTER"/>
    </http>

    <beans:bean id="accessDeniedHandler" class="seoul.democracy.common.handler.SiteAccessDeniedHandler"/>

    <beans:bean id="authenticationEntryPoint" class="seoul.democracy.common.handler.SiteAuthenticationEntryPoint">
        <beans:constructor-arg value="/login.do"/>
    </beans:bean>

    <beans:bean id="csrfSecurityRequestMatcher" class="seoul.democracy.common.config.CsrfSecurityRequestMatcher"/>

    <beans:bean id="authenticationSuccessHandler"
                class="seoul.democracy.common.handler.SiteAuthenticationSuccessHandler">
        <beans:property name="defaultTargetUrl" value="/index.do"/>
    </beans:bean>

    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userLoginService">
            <password-encoder ref="encoder"/>
        </authentication-provider>
        <authentication-provider ref="socialAuthenticationProvider"/>
    </authentication-manager>

    <beans:bean id="userLoginService" class="seoul.democracy.user.service.UserLoginService"/>

    <beans:bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
        <beans:property name="hierarchy">
            <beans:value>
                ROLE_ADMIN > ROLE_MANAGER
                ROLE_MANAGER > ROLE_USER
                ROLE_USER > ROLE_RESTRICTED
                ROLE_RESTRICTED > IS_AUTHENTICATED_FULLY
                IS_AUTHENTICATED_REMEMBERED > IS_AUTHENTICATED_ANONYMOUSLY
            </beans:value>
        </beans:property>
    </beans:bean>

    <beans:bean id="socialAuthenticationFilter" class="seoul.democracy.social.filter.SocialAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="socialService" ref="socialService"/>
        <beans:property name="authenticationSuccessHandler" ref="authenticationSuccessHandler"/>
        <beans:property name="authenticationFailureHandler" ref="authenticationFailureHandler"/>
    </beans:bean>

    <beans:bean id="socialAuthenticationProvider" class="seoul.democracy.social.service.SocialAuthenticationProvider">
        <beans:property name="userDetailsService" ref="socialUserDetailService"/>
        <beans:property name="socialService" ref="socialService"/>
    </beans:bean>

    <beans:bean id="authenticationFailureHandler"
            class="seoul.democracy.common.handler.SiteAuthenticationFailureHandler">
        <beans:property name="defaultFailureUrl" value="/email-login.do?login_error=1"/>
    </beans:bean>
    <beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
</beans:beans>